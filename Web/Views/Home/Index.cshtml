@model IEnumerable<Funny.Models.Story>

@{
    ViewBag.Title = "British Humour";
}

<table class="table">
    <tr>
        <!-- Up Vote-->
        <th></th>
        <th>
            @Html.ActionLink("Rating", "Index", new { sortOrder = "ratingDescending" })
        </th>

        <th></th>
        <th></th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = "dateCreatedDescending" })
        </th>
        <th>
        </th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @*Maintain sortOrder when vote is requested*@
                @Html.ActionLink("^^^", "Vote", new { storyID = item.ID, sortOrder = Request.QueryString["sortOrder"] })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @if (item.VideoURL != null) {
                    <iframe width="210" height="158" src="@item.VideoURL" frameborder="0" allowfullscreen></iframe>
                }

                @if (item.ImageURL != null) {
                    <img src="@item.ImageURL" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
                @*@String.Format("{0:d-MMM-yy}", item.AddedDate)*@
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.StoryType.Name)
                </td>*@

        </tr>
    }
</table>
